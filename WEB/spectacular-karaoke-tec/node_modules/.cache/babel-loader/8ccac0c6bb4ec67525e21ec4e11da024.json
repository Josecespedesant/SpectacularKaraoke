{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yen21\\\\Documents\\\\Programming\\\\SpectacularKaraoke\\\\WEB\\\\spectacular-karaoke-tec\\\\src\\\\components\\\\Lyrics.component.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction lyricsToArray(lyrics) {\n  if (lyrics) {\n    const lines = lyrics.split('\\n');\n    const words = lines.reduce((words, line) => {\n      words = words.concat(line.split(' '));\n      words.push('\\n');\n      return words;\n    }, []);\n    return words;\n  }\n\n  return [];\n}\n\nclass Lyrics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.playLyrics = () => {\n      this.setState({\n        timer: setInterval(this.nextWord, this.props.speed)\n      });\n      console.log(this.timer);\n    };\n\n    this.stopTimer = () => {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    };\n\n    this.stopLyrics = () => {\n      this.stopTimer();\n      this.setState({\n        timer: null\n      });\n    };\n\n    this.nextWord = () => {\n      if (this.state.currentWord <= this.state.lyricsArray.length) {\n        this.setState(prevState => {\n          return {\n            currentWord: prevState.currentWord + 1\n          };\n        });\n      } else if (!this.state.finished) {\n        this.setState({\n          finished: true\n        }, () => {\n          !!this.props.onFinish && this.props.onFinish();\n        });\n      }\n    };\n\n    this.renderHighlightedLyrics = () => {\n      const {\n        lyricsArray,\n        currentWord\n      } = this.state;\n\n      if (currentWord === 0) {\n        return null;\n      }\n\n      console.log();\n\n      if (currentWord < 60) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"fw-bolder text-primary\",\n          children: [\" \", lyricsArray.slice(0, currentWord).join(' ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"fw-bolder text-white\",\n            children: [\" \", lyricsArray.slice(currentWord - 60, currentWord - 40).join(' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"fw-bolder text-primary\",\n            children: [\" \", lyricsArray.slice(currentWord - 40, currentWord).join(' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 121\n          }, this)]\n        }, void 0, true);\n      }\n    };\n\n    this.renderRemainingLyrics = () => {\n      const {\n        lyricsArray,\n        currentWord\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"fw-lighter\",\n        children: lyricsArray.slice(currentWord, currentWord + 40).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }, this);\n    };\n\n    this.state = {\n      lyrics: null,\n      lyricsArray: null,\n      currentWord: 0,\n      timer: null,\n      finished: true\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.lyrics !== state.lyrics) {\n      return { ...state,\n        lyrics: props.lyrics,\n        lyricsArray: lyricsToArray(props.lyrics),\n        currentWord: 0,\n        finished: !props.lyrics\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.playLyrics();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.currentWord <= nextState.lyricsArray.length;\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lyrics\",\n      children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n        children: [this.renderHighlightedLyrics(), \" \", this.renderRemainingLyrics()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-primary\",\n        type: \"button\",\n        onClick: this.stopLyrics,\n        children: \"STOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLyrics.defaultProps = {\n  speed: 250\n};\nexport default Lyrics;","map":{"version":3,"sources":["C:/Users/yen21/Documents/Programming/SpectacularKaraoke/WEB/spectacular-karaoke-tec/src/components/Lyrics.component.js"],"names":["React","Component","lyricsToArray","lyrics","lines","split","words","reduce","line","concat","push","Lyrics","constructor","props","playLyrics","setState","timer","setInterval","nextWord","speed","console","log","stopTimer","clearInterval","stopLyrics","state","currentWord","lyricsArray","length","prevState","finished","onFinish","renderHighlightedLyrics","slice","join","renderRemainingLyrics","getDerivedStateFromProps","componentDidMount","shouldComponentUpdate","nextProps","nextState","componentWillUnmount","render","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,MAAIA,MAAJ,EAAY;AACV,UAAMC,KAAK,GAAGD,MAAM,CAACE,KAAP,CAAa,IAAb,CAAd;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAa,CAACD,KAAD,EAAQE,IAAR,KAAiB;AAC1CF,MAAAA,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAaD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACI,IAAN,CAAW,IAAX;AACA,aAAOJ,KAAP;AACD,KAJa,EAIX,EAJW,CAAd;AAKA,WAAOA,KAAP;AACD;;AACD,SAAO,EAAP;AACD;;AAED,MAAMK,MAAN,SAAqBV,SAArB,CAA+B;AAC7BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqCnBC,UArCmB,GAqCN,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEC,WAAW,CAAC,KAAKC,QAAN,EAAgB,KAAKL,KAAL,CAAWM,KAA3B;AADN,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD,KA1CkB;;AAAA,SA4CnBM,SA5CmB,GA4CP,MAAM;AAChB,UAAI,KAAKN,KAAT,EAAgB;AACdO,QAAAA,aAAa,CAAC,KAAKP,KAAN,CAAb;AACD;AACF,KAhDkB;;AAAA,SAkDnBQ,UAlDmB,GAkDN,MAAM;AACjB,WAAKF,SAAL;AACA,WAAKP,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KAvDkB;;AAAA,SAyDnBE,QAzDmB,GAyDR,MAAM;AACf,UAAI,KAAKO,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWE,WAAX,CAAuBC,MAArD,EAA6D;AAC3D,aAAKb,QAAL,CAAcc,SAAS,IAAI;AACzB,iBAAO;AAAEH,YAAAA,WAAW,EAAEG,SAAS,CAACH,WAAV,GAAwB;AAAvC,WAAP;AACD,SAFD;AAGD,OAJD,MAIO,IAAI,CAAC,KAAKD,KAAL,CAAWK,QAAhB,EAA0B;AAC/B,aAAKf,QAAL,CAAc;AAAEe,UAAAA,QAAQ,EAAE;AAAZ,SAAd,EAAkC,MAAM;AACtC,WAAC,CAAC,KAAKjB,KAAL,CAAWkB,QAAb,IAAyB,KAAKlB,KAAL,CAAWkB,QAAX,EAAzB;AACD,SAFD;AAGD;AACF,KAnEkB;;AAAA,SAqEnBC,uBArEmB,GAqEO,MAAM;AAC9B,YAAM;AAAEL,QAAAA,WAAF;AAAeD,QAAAA;AAAf,UAA+B,KAAKD,KAA1C;;AACA,UAAIC,WAAW,KAAK,CAApB,EAAuB;AACrB,eAAO,IAAP;AACD;;AACDN,MAAAA,OAAO,CAACC,GAAR;;AACA,UAAIK,WAAW,GAAC,EAAhB,EAAmB;AACjB,4BAAO;AAAM,UAAA,KAAK,EAAC,wBAAZ;AAAA,0BAAuCC,WAAW,CAACM,KAAZ,CAAkB,CAAlB,EAAqBP,WAArB,EAAkCQ,IAAlC,CAAuC,GAAvC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAEK;AAEH,4BAAO;AAAA,kCAAE;AAAM,YAAA,KAAK,EAAC,sBAAZ;AAAA,4BAAqCP,WAAW,CAACM,KAAZ,CAAkBP,WAAW,GAAC,EAA9B,EAAkCA,WAAW,GAAC,EAA9C,EAAkDQ,IAAlD,CAAuD,GAAvD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAF,oBAA2G;AAAM,YAAA,KAAK,EAAC,wBAAZ;AAAA,4BAAuCP,WAAW,CAACM,KAAZ,CAAkBP,WAAW,GAAC,EAA9B,EAAkCA,WAAlC,EAA+CQ,IAA/C,CAAoD,GAApD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3G;AAAA,wBAAP;AACD;AAEF,KAlFkB;;AAAA,SAoFnBC,qBApFmB,GAoFK,MAAM;AAC5B,YAAM;AAAER,QAAAA,WAAF;AAAeD,QAAAA;AAAf,UAA+B,KAAKD,KAA1C;AACA,0BAAO;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kBAA8BE,WAAW,CAACM,KAAZ,CAAkBP,WAAlB,EAA8BA,WAAW,GAAC,EAA1C,EAA8CQ,IAA9C,CAAmD,GAAnD;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAvFkB;;AAGjB,SAAKT,KAAL,GAAa;AACXtB,MAAAA,MAAM,EAAE,IADG;AAEXwB,MAAAA,WAAW,EAAE,IAFF;AAGXD,MAAAA,WAAW,EAAE,CAHF;AAIXV,MAAAA,KAAK,EAAE,IAJI;AAKXc,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAE8B,SAAxBM,wBAAwB,CAACvB,KAAD,EAAQY,KAAR,EAAe;AAC5C,QAAIZ,KAAK,CAACV,MAAN,KAAiBsB,KAAK,CAACtB,MAA3B,EAAmC;AACjC,aAAO,EACL,GAAGsB,KADE;AAELtB,QAAAA,MAAM,EAAEU,KAAK,CAACV,MAFT;AAGLwB,QAAAA,WAAW,EAAEzB,aAAa,CAACW,KAAK,CAACV,MAAP,CAHrB;AAILuB,QAAAA,WAAW,EAAE,CAJR;AAKLI,QAAAA,QAAQ,EAAE,CAACjB,KAAK,CAACV;AALZ,OAAP;AAOD;;AACD,WAAO,IAAP;AACD;;AAEDkC,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,UAAL;AACD;;AAEDwB,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAOA,SAAS,CAACd,WAAV,IAAyBc,SAAS,CAACb,WAAV,CAAsBC,MAAtD;AACD;;AAEDa,EAAAA,oBAAoB,GAAG;AACrB,SAAKnB,SAAL;AACD;;AAsDDoB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAA,mBACI,KAAKV,uBAAL,EADJ,OACuC,KAAKG,qBAAL,EADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,OAAO,EAAE,KAAKX,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AApG4B;;AAuG/Bb,MAAM,CAACgC,YAAP,GAAsB;AACpBxB,EAAAA,KAAK,EAAE;AADa,CAAtB;AAIA,eAAeR,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction lyricsToArray(lyrics) {\r\n  if (lyrics) {\r\n    const lines = lyrics.split('\\n');\r\n    const words = lines.reduce((words, line) => {\r\n      words = words.concat(line.split(' '))\r\n      words.push('\\n');\r\n      return words;\r\n    }, []);\r\n    return words;\r\n  }\r\n  return [];\r\n}\r\n\r\nclass Lyrics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      lyrics: null,\r\n      lyricsArray: null,\r\n      currentWord: 0,\r\n      timer: null,\r\n      finished: true,\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.lyrics !== state.lyrics) {\r\n      return {\r\n        ...state,\r\n        lyrics: props.lyrics,\r\n        lyricsArray: lyricsToArray(props.lyrics),\r\n        currentWord: 0,\r\n        finished: !props.lyrics,\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.playLyrics();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextState.currentWord <= nextState.lyricsArray.length\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stopTimer();\r\n  }\r\n\r\n  playLyrics = () => {\r\n    this.setState({\r\n      timer: setInterval(this.nextWord, this.props.speed),\r\n    });\r\n    console.log(this.timer);\r\n  }\r\n\r\n  stopTimer = () => {\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  stopLyrics = () => {\r\n    this.stopTimer();\r\n    this.setState({\r\n      timer: null,\r\n    });\r\n  }\r\n\r\n  nextWord = () => {\r\n    if (this.state.currentWord <= this.state.lyricsArray.length) {\r\n      this.setState(prevState => {\r\n        return { currentWord: prevState.currentWord + 1 }\r\n      })\r\n    } else if (!this.state.finished) {\r\n      this.setState({ finished: true }, () => {\r\n        !!this.props.onFinish && this.props.onFinish();\r\n      })\r\n    }\r\n  }\r\n\r\n  renderHighlightedLyrics = () => {\r\n    const { lyricsArray, currentWord } = this.state;\r\n    if (currentWord === 0) {\r\n      return null;\r\n    }\r\n    console.log()\r\n    if (currentWord<60){\r\n      return <span class=\"fw-bolder text-primary\"> {lyricsArray.slice(0, currentWord).join(' ')}</span>\r\n    }else{\r\n\r\n      return <><span class=\"fw-bolder text-white\"> {lyricsArray.slice(currentWord-60, currentWord-40).join(' ')}</span> <span class=\"fw-bolder text-primary\"> {lyricsArray.slice(currentWord-40, currentWord).join(' ')}</span></>\r\n    }\r\n    \r\n  }\r\n\r\n  renderRemainingLyrics = () => {\r\n    const { lyricsArray, currentWord } = this.state;\r\n    return <span className=\"fw-lighter\">{lyricsArray.slice(currentWord,currentWord+40).join(' ')}</span>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lyrics\">\r\n        <pre>\r\n          { this.renderHighlightedLyrics() } { this.renderRemainingLyrics() }\r\n        </pre>\r\n        <button class=\"btn btn-primary\" type=\"button\" onClick={this.stopLyrics}>STOP</button>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLyrics.defaultProps = {\r\n  speed: 250,\r\n}\r\n\r\nexport default Lyrics;\r\n"]},"metadata":{},"sourceType":"module"}